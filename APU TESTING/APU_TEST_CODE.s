;
; File generated by cc65 v 2.19 - Git 51b946b
;
	.fopt		compiler,"cc65 v 2.19 - Git 51b946b"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_PALETTES
	.export		_SHIFTING_PAL
	.export		_LEVEL
	.export		_IRAM
	.export		_UNUSED
	.export		_WRAM
	.export		___MAIN__
	.export		_WAIT_FOR_VSYNC
	.export		_FETCH_PALETTES
	.export		_SHIFT_PALETTES

.segment	"DATA"

.segment	"IRAM": zeropage
.segment	"UNUSED"
.segment	"WRAM"
_IRAM:
	.res	2048,$00
_UNUSED:
	.res	22527,$00
_WRAM:
	.res	8192,$00

.segment	"RODATA"

_PALETTES:
	.byte	$30
	.byte	$3D
	.byte	$2D
	.byte	$1D
	.byte	$31
	.byte	$21
	.byte	$11
	.byte	$01
	.byte	$36
	.byte	$26
	.byte	$16
	.byte	$06
	.byte	$3A
	.byte	$2A
	.byte	$1A
	.byte	$0A
_SHIFTING_PAL:
	.byte	$30
	.byte	$3D
	.byte	$2D
	.byte	$1D
	.byte	$1D
	.byte	$2D
	.byte	$3D
	.byte	$30
_LEVEL:
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01

; ---------------------------------------------------------------
; void __near__ __MAIN__ (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	___MAIN__: near

.segment	"CODE"

	jsr     _WAIT_FOR_VSYNC
	jsr     _FETCH_PALETTES
	lda     #$18
	sta     $2001
	lda     #$20
	sta     $2006
	sta     $2006
	ldx     #$00
	lda     #$01
	sta     $2007
L0002:	jsr     _WAIT_FOR_VSYNC
	inc     _IRAM
	lda     _IRAM
	cmp     #$21
	lda     #$00
	tax
	rol     a
	beq     L0002
	jsr     _SHIFT_PALETTES
	jmp     L0002

.endproc

; ---------------------------------------------------------------
; void __near__ WAIT_FOR_VSYNC (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_WAIT_FOR_VSYNC: near

.segment	"CODE"

	lda     $2002
	sta     _IRAM+1
	cmp     #$80
	bcs     L0003
	jmp     _WAIT_FOR_VSYNC
L0003:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ FETCH_PALETTES (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_FETCH_PALETTES: near

.segment	"CODE"

	lda     #$00
	sta     _IRAM+1
L0007:	lda     _IRAM+1
	cmp     #$10
	bcs     L0003
	lda     #$3F
	sta     $2006
	lda     _IRAM+1
	sta     $2006
	ldy     _IRAM+1
	lda     _PALETTES,y
	sta     $2007
	inc     _IRAM+1
	jmp     L0007
L0003:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ SHIFT_PALETTES (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_SHIFT_PALETTES: near

.segment	"CODE"

	lda     #$00
	sta     _IRAM
L000C:	lda     _IRAM
	cmp     #$04
	bcs     L000D
	lda     #$3F
	sta     $2006
	lda     _IRAM+1
	sta     $2006
	ldy     _IRAM+2
	lda     _SHIFTING_PAL,y
	sta     $2007
	inc     _IRAM+1
	inc     _IRAM+2
	inc     _IRAM
	jmp     L000C
L000D:	lda     #$00
	sta     _IRAM+1
	lda     #$02
	sta     _IRAM
	lda     #$00
	sta     _IRAM
L000E:	lda     _IRAM
	cmp     #$03
	bcc     L000F
	dec     _IRAM+2
	inc     _IRAM
	jmp     L000E
L000F:	lda     _IRAM+2
	cmp     #$0A
	bcc     L000B
	lda     #$00
	sta     _IRAM+2
L000B:	rts

.endproc

